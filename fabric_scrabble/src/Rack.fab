import fabricated.util.ArrayList;
import fabricated.util.StringComparator;

/**
 * This class represents a player's rack in the Scrabble game.
 */
public class Rack[principal Game, principal Player]{

    public ArrayList[{Game->Player; Game<-}]{Game<-} tiles;

    public Rack{Game<-}(){
      try{
        this.tiles = new ArrayList{Game<-}(new StringComparator());
        }
      catch (IllegalArgumentException exc){

      }
    }

   /**
    * Initializes the rack with 7 random tiles
    */
    public void populateRackTile{Game<-}(Bag[Game]{Game<-} bag){
      atomic{
        for(int{Game<-} i=0; i < 7; i++){
          //String{Game->Player; Game<-} temp = declassify(bag.getTilePlayer(), {Game->;Game<-} to {Game->Player;Game<-});

          //tiles.add(temp);
          tiles.add(bag.getTilePlayer(Player));
        }
      }
    }

   /**
   * Replaces the input tile with a random tile drawn from Bag
   */
    private void swapTile{Game<-}(String{Game<-; Game->Player} tile, Bag[Game]{Game<-} bag){
      atomic{
        if(this.tiles.indexOf(tile) != -1 ){
          String{Game->Player; Game<-} newTile = bag.swapTile(tile, Player);

          this.tiles.remove(this.tiles.indexOf(tile));
          this.tiles.add(newTile);
        }
      }
    }

    /**
    * Replaces all tiles in tileList with random tiles drawn from Bag
    */
    public void swapTiles{Game<-}(String[]{Game<-; Game->Player} tileList, Bag[Game]{Game<-} bag){
      atomic{
        for(int i=0; i < 7; i++){
         this.swapTile(tileList[i], bag);
        }
      }
    }

}
