//import fabric.util.Random;
import fabric.util.ArrayList;

/**
 * This class represents the bag in the Scrabble game.
 */
public class Bag[principal Game] {

    public ArrayList[{Game->; Game<-}]{Game->; Game<-} tiles;

    private int counts[];

    public Bag{Game->; Game<-}(){
      this.tiles = new ArrayList();
      this.counts = new int[]{2,9,2,2,4,12,2,3,2,9,1,1,4,2,6,8,2,1,6,4,6,4,2,2,1,2,1};
      return this;
    }

   /**
    * Initializes the bag with tiles using the counts array
    */
    public void populateBag{Game<-}(){
       atomic{
         for(int i=0; i < counts.length; i++){
             for(int j=0; j < counts[i]; j++) {
              String{Game<-; Game->} temp;
              temp = i == 0 ? "*" : Character.toString((char)('a' + i - 1));
              this.tiles.add(temp);
           }
         }
       }
    }

    /**
    * Returns a random tile from Bag,
    * and removes this tile from Bag
    */
    public String{Game<-; Game->} getTile{Game<-}(){

      atomic{
        //Random rand = new Random();
        //int rand_value = rand.nextInt(this.tiles.size());
        int rand_value = this.tiles.size()-1;
        String{Game<-; Game->}  tile =  (String) this.tiles.get(rand_value);

        this.tiles.remove(rand_value);

        return tile;
        }
    }

    /**
    * Returns a random tile from Bag,
    * removes this tile from Bag,
    * and adds the input tile to the Bag
    */
    public String{*lbl} swapTile(String {*lbl} tile, label lbl){
      atomic{
        String{*lbl} newTile = this.getTile();
        this.tiles.add(tile);
        return declassify(newTile, {});
      }
    }

}
