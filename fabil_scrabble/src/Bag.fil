import java.util.Random;
import fabric.util.ArrayList;

/**
 * This class represents the bag in the Scrabble game.
 */
public class Bag {

    public ArrayList tiles;

    private int counts[];

    public Bag Bag$(){
      this.tiles = new ArrayList().fabric$util$ArrayList$();
      fabric$lang$Object$();
      this.counts = new int[]{2,9,2,2,4,12,2,3,2,9,1,1,4,2,6,8,2,1,6,4,6,4,2,2,1,2,1};
      return this;
    }

   /**
    * Initializes the bag with tiles using the counts array
    */
    public void populateBag(){
       atomic{
         for(int i=0; i < counts.length; i++){
             for(int j=0; j < counts[i]; j++) {
              String temp;
              temp = i == 0 ? "*" : Character.toString((char)('a' + i - 1));
              this.tiles.add(temp);
           }
         }
       }
    }

    /**
    * Returns a random tile from Bag,
    * and removes this tile from Bag
    */
    public String getTile(){
      ArrayList test = new ArrayList().fabric$util$ArrayList$();
      test.add("one");
      test.add("two");
      test.add("three");
      //System.out.println(test.get(1));
      test.remove(1);
      String test_n = "";
      System.out.println(test);
      atomic{
        Random rand = new Random();
        int rand_value = rand.nextInt(this.tiles.size());
        String tile =  (String) this.tiles.get(rand_value);
        //String debug = "";
        //for(int i=0; i<this.tiles.size();i++){
        //   debug += this.tiles.get(i);
        //}

        System.out.println(this.tiles);
        this.tiles.remove(rand_value);
        //String debug_new = "";
        //for(int j=0; j<this.tiles.size();j++){
        //    debug_new += this.tiles.get(j);
        //}
        System.out.println(this.tiles);

        return tile;
        }
    }

    /**
    * Returns a random tile from Bag,
    * removes this tile from Bag,
    * and adds the input tile to the Bag
    */
    public String swapTile(String tile){
      atomic{
        String newTile = this.getTile();
        this.tiles.add(tile);
        return newTile;
      }
    }

}
